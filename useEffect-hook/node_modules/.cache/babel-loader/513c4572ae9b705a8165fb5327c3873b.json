{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gccc1\\\\Desktop\\\\react-complete-guide\\\\useEffect-hook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const userLoggedInInfo = localStorage.getItem(\"isLoggedIn\");\n\n    if (userLoggedInInfo === \"1\") {\n      console.log(`sdfsdfds`);\n      setIsLoggedIn(true);\n    }\n  }, []); // the useEffect hook is gonna be executed after the entire app module is evaluated\n  // and if any dependency changes. if there are not dependecies. it will be executed just once.\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.provider, {\n    value: {\n      isLoggedIn: false\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/gccc1/Desktop/react-complete-guide/useEffect-hook/src/App.js"],"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","userLoggedInInfo","localStorage","getItem","console","log","loginHandler","email","password","setItem","logoutHandler","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAzB;;AACA,QAAIF,gBAAgB,KAAK,GAAzB,EAA8B;AAC5BG,MAAAA,OAAO,CAACC,GAAR,CAAa,UAAb;AACAL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GANQ,EAMN,EANM,CAAT,CAHa,CAWb;AACA;;AAEA,QAAMM,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AAEAT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAND;;AAQA,QAAMU,aAAa,GAAG,MAAM;AAC1BR,IAAAA,YAAY,CAACS,UAAb,CAAwB,YAAxB;AACAX,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,UAAU,EAAE;AADP,KADT;AAAA,4BAKE,QAAC,UAAD;AAAY,MAAA,eAAe,EAAEA,UAA7B;AAAyC,MAAA,QAAQ,EAAEW;AAAnD;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,iBACG,CAACX,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEO;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGP,UAAU,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAxCQD,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./context/auth-context\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const userLoggedInInfo = localStorage.getItem(\"isLoggedIn\");\n    if (userLoggedInInfo === \"1\") {\n      console.log(`sdfsdfds`);\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  // the useEffect hook is gonna be executed after the entire app module is evaluated\n  // and if any dependency changes. if there are not dependecies. it will be executed just once.\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.provider\n      value={{\n        isLoggedIn: false,\n      }}\n    >\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home />}\n      </main>\n    </AuthContext.provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}